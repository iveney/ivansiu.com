<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: matlab | Ivan's Blog]]></title>
  <link href="http://blog.ivansiu.com/blog/categories/matlab/atom.xml" rel="self"/>
  <link href="http://blog.ivansiu.com/"/>
  <updated>2018-01-20T19:21:22-08:00</updated>
  <id>http://blog.ivansiu.com/</id>
  <author>
    <name><![CDATA[Zigang "Ivan" Xiao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Source-highlight for Matlab/octave]]></title>
    <link href="http://blog.ivansiu.com/blog/2014/04/30/source-highlight-for-matlab-slash-octave/"/>
    <updated>2014-04-30T23:59:40-07:00</updated>
    <id>http://blog.ivansiu.com/blog/2014/04/30/source-highlight-for-matlab-slash-octave</id>
    <content type="html"><![CDATA[![](https://res.cloudinary.com/maomao/image/upload/v1491291930/blog/2014-05-01-source-highlight-for-matlab-slash-octave.png)

I recently worked with Matlab a lot. When in console, sometimes I want to use
`less` to quickly examine the file content, and I have already 
[set it up](http://superuser.com/a/71593)
such that it uses [source-highlight](http://www.gnu.org/software/src-highlite/)
to output colorful escape sequence to the console.
However, source-highlight does not come with a syntax support for Matlab
by default. Luckily, this
[post](http://blog.sina.com.cn/s/blog_4513dde60100o6o4.html) and 
[this](http://blog.sina.com.cn/s/blog_4513dde60101kpmr.html) (in Chinese) 
provides a solution.

<!-- more -->

First of all, install source-highlight using homebrew. 

```
brew install source-highlight
```

Note that  source-highlight depends on boost, and as of the date of this post,
brew provides a precompiled library (bottle) for boost. However, the python
support is compiled against the system python, so if you installed a custom one
(say installed via homebrew)
and use it by default, brew will compile the boost from source instead, which
takes an extremely long time.  To prevent this, we need to unlink it first,
and link it back afterwards. That is,


``` bash
brew unlink python
brew link python    # after installation
```

Go to the following folder and create two files,
 
``` bash
cd `brew --prefix source-highlight`/share/source-highlight
```

``` ini matlab.style
keyword blue;
string #a020f0;
comment darkgreen;
```


``` ini matlab.lang
keyword = "break|case|catch|classdef|continue|else|elseif|end|for|function|global|if|otherwise|parfor|persistent|return|spmd|switch|try|while"

keyword = '^\s*(break|case|catch|classdef|continue|else|elseif|end|for|function|global|if|otherwise|parfor|persistent|return|spmd|switch|try|while)(?=\s)'

include "function.lang"

state command start '^\s*[a-zA-Z][\w]*(?=\s)(?!\s+\.?[*/+-:]\s+\w)(?!\s+=)' begin
        comment start "%"
        string delim '[[:blank:]]' '[^%;]*'
end

comment delim "%{" "%}" multiline nested
comment start "%"

string delim '(?<![\w.])\'' "'" escape "''"
```

Finally, edit `lang.map` to create a mapping for matlab file.

``` bash lang.map
echo 'm = matlab.lang' >> lang.map
```
]]></content>
  </entry>
  
</feed>
